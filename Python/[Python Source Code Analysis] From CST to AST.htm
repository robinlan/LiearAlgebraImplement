<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
     
    <html xmlns="http://www.w3.org/1999/xhtml">
    
<head>   
    
     
    <script type="text/javascript" src="http://c.csdnimg.cn/pubfooter/js/tracking.js" charset="utf-8"></script>  

    <script type="text/javascript">
        var protocol = window.location.protocol;
        document.write('<script type="text/javascript" src="' + protocol + '//csdnimg.cn/pubfooter/js/repoAddr2.js?v=' + Math.random() + '"></' + 'script>');
    </script>

     <script id="allmobilize" charset="utf-8" src="http://a.yunshipei.com/46aae4d1e2371e4aa769798941cef698/allmobilize.min.js"></script>
 <meta http-equiv="Cache-Control" content="no-siteapp" /><link rel="alternate" media="handheld" href="#" />

    <title>Python源码分析6 – 从CST到AST的转化 - 张羿的CSDN专栏
        - 博客频道 - CSDN.NET</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="description" content="AGG " />
    <script src="http://static.blog.csdn.net/scripts/jquery.js" type="text/javascript"></script>
    <script type="text/javascript" src="http://static.blog.csdn.net/scripts/ad.js?v=1.1"></script>
        <!--new top-->
               <link rel="stylesheet" href="http://static.csdn.net/public/common/toolbar/css/index.css">        <!--new top-->

    <link rel="Stylesheet" type="text/css" href="http://static.blog.csdn.net/skin/default/css/style.css?v=1.1" />
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="/ATField/rss/list" />
    <link rel="shortcut icon" href="http://c.csdnimg.cn/public/favicon.ico" />
    <link type="text/css" rel="stylesheet" href="http://static.blog.csdn.net/scripts/SyntaxHighlighter/styles/default.css" />
 


</head>
<body>
    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="http://static.csdn.net/public/common/toolbar/js/html.js" type="text/javascript"></script>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/atfield">张羿的CSDN专栏</a></h2>
            <h3>正在开发.NET Native</h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>
            
                <li id="btnContents"><a href="http://blog.csdn.net/atfield?viewmode=contents"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_mulu'])">
                    <img src="http://static.blog.csdn.net/images/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/atfield?viewmode=list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_zhaiyao'])">
                    <img src="http://static.blog.csdn.net/images/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/atfield/rss/list"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_RSS'])">
                    <img src="http://static.blog.csdn.net/images/ico_rss.gif">订阅</span></a></li>                

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "ATField";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/atfield";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod='popu_3' > 

<a href="http://blog.csdn.net/blogdevteam/article/details/47808555"><font color=red>【博乐】把C币，装进你的口袋</font></a>
&nbsp;&nbsp;&nbsp;
  

<a href="http://huiyi.csdn.net/activity/product/goods_list?project_id=2262">
<font color=blue>专家亲授Hadoop技术，你报名了吗？ 
</font></a>
&nbsp;&nbsp;&nbsp;

<a href="http://edu.csdn.net/combo/detail/63">
<font color=red>软考套餐限时7折优惠 
</font></a>
&nbsp;&nbsp;&nbsp;

<a href="http://www.csdn.net/app/">
<font color=blue>CSDN移动客户端，下载送50C币
</font></a>
&nbsp;&nbsp;&nbsp;</div>                        </div>
                        

  
<link href="http://static.blog.csdn.net/css/comment1.css" type="text/css" rel="stylesheet" />
<link href="http://static.blog.csdn.net/css/style1.css" type="text/css" rel="stylesheet" />
<script language='JavaScript' type='text/javascript' src='http://download.csdn.net/js/jquery.cookie.js'></script>
<script type="text/javascript" src="http://c.csdnimg.cn/rabbit/search-service/main.js"></script>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0" />
<script type="text/javascript" src="http://static.blog.csdn.net/public/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>

  <script type="text/ecmascript">
      window.quickReplyflag = true;
    </script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>


    <h1>
        <span class="link_title"><a href="/atfield/article/details/1488934">
        Python源码分析6 – 从CST到AST的转化            
        </a></span>
    </h1>
</div>

   

    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="/ATField/article/category/256448" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_fenlei']);">Python源码分析</a> 
        </span>
    <span class="link_postdate">2007-01-21 00:22</span>
    <span class="link_view" title="阅读次数">4578人阅读</span>
    <span class="link_comments" title="评论次数"><a href="#comments" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_pinglun'])">评论</a>(7)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle('Python源码分析6 – 从CST到AST的转化','1488934');return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="#report"  onclick="javascript:report(1488934,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href='http://www.csdn.net/tag/python' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">python</a><a href='http://www.csdn.net/tag/newline' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">newline</a><a href='http://www.csdn.net/tag/input' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">input</a><a href='http://www.csdn.net/tag/struct' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">struct</a><a href='http://www.csdn.net/tag/null' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">null</a><a href='http://www.csdn.net/tag/file' target=_blank onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_tag']);">file</a></div>

  

  
  
     

<div id="article_content" class="article_content">
<h1 style="MARGIN: 10pt 0in 0pt"><font face="Calibri" color="#17365d" size="5">Introduction</font></h1>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">上篇文章解释了</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">是如何使用</span>PyParser<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">生成</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的。回顾一下，</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">执行代码要经过如下过程：</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo3"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">1.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>Tokenizer<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">进行词法分析，把源程序分解为</span>Token</p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo3"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">2.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>Parser<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">根据</span>Token<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">创建</span>CST</p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo3"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">3.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">被转换为</span>AST</p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo3"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">4.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">被编译为字节码</span></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo3"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">5.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">执行字节码</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">当执行</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代码的时候，以代码存放在文件中的情况为例，</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">会调用</span>PyParser_ASTFromFile<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数将文件的代码内容转换为</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">mod_ty<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">PyParser_ASTFromFile(FILE *fp, const char *filename, int start, char *ps1,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>char *ps2, PyCompilerFlags *flags, int *errcode,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span>PyArena *arena)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mod_ty mod;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>perrdetail err;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>node *n = PyParser_ParseFileFlags(fp, filename, &amp;_PyParser_Grammar,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>start, ps1, ps2, &amp;err, PARSER_FLAGS(flags));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (n) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>mod = PyAST_FromNode(n, flags, filename, arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyNode_Free(n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return mod;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>else {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>err_input(&amp;err);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (errcode)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>*errcode = err.error;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">在</span>PyParser_ParseFileFlags<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">把文件转换成</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">之后，</span>PyAST_FromNode<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数会把</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">转换成</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">。此函数定义在</span>include/ast.h<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中</span>:</p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">PyAPI_FUNC(mod_ty) PyAST_FromNode(const node *, PyCompilerFlags *flags,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp; </span>const char *, PyArena *);<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">在分析此函数之前，我们先来看一下有关</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的一些基本的类型定义。</span></p>
<h1 style="MARGIN: 10pt 0in 0pt"><font face="Calibri" color="#17365d" size="5">AST Types</font></h1>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt">AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">所用到的类型均定义在</span>Python_ast.h<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中，以</span>stmt_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型为例：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">enum _stmt_kind {FunctionDef_kind=1, ClassDef_kind=2, Return_kind=3,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Delete_kind=4, Assign_kind=5, AugAssign_kind=6, Print_kind=7,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>For_kind=8, While_kind=9, If_kind=10, With_kind=11,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Raise_kind=12, TryExcept_kind=13, TryFinally_kind=14,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Assert_kind=15, Import_kind=16, ImportFrom_kind=17,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Exec_kind=18, Global_kind=19, Expr_kind=20, Pass_kind=21,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Break_kind=22, Continue_kind=23};<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">struct _stmt {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>enum _stmt_kind kind;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>union {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>identifier name;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>arguments_ty args;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq *body;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq *decorators;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} FunctionDef;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>identifier name;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq *bases;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq *body;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} ClassDef;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>expr_ty value;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} Return;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>// ... </span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-bidi-font-size: 9.0pt; mso-fareast-font-family: 宋体; mso-bidi-font-family: 'Courier New'; mso-ascii-font-family: 'Courier New'; mso-hansi-font-family: 'Courier New'; mso-fareast-theme-font: minor-fareast">过长，中间从略</span><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>expr_ty value;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} Expr;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>} v;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>int lineno;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>int col_offset;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">};<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">typedef struct _stmt *stmt_ty;<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt">stmt_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">是语句结点类型，实际上是</span>_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结构的指针。</span>_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结构比较长，但有着很清晰的</span>Pattern<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">：</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">1．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">第一个</span>Field<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">为</span>kind<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，代表语句的类型。</span>_stmt_kind<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">定义了</span>_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的所有可能的语句类型，从函数定义语句，类定义语句直到</span>Continue<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">语句共有</span>23<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">种类型。</span></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">2．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">接下来是一个</span>union v<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，每个成员均为一个</span>struct<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，分别对应</span>_stmt_kind<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中的一种类型，如</span>_stmt.v.FunctionDef<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对应了</span>_stmt_kind<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">枚举中的</span>FunctionDef_Kind<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，也就是说，当</span>_stmt.kind == FunctionDef_Kind<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">时，</span>_stmt.v.FunctionDef<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中保存的就是对应的函数定义语句的具体内容。</span></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">3．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">其他数据，如</span>lineno<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">和</span>col_offset</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">大部分</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点类型均是按照类似的</span>pattern<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">来定义的，不再赘述。除此之外，另外有一种比较简单的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型如</span>operator_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，</span>expr_context_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">等，由于这些类型仍以</span>_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结尾，因此也可以认为是</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的结点，但实际上，这些类型只是简单的枚举类型，并非指针。因此在以后的文章中，并不把此类</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型作为结点看待，而是作为简单的枚举处理。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">由于每个</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型会在</span>union<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中引用其他的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，这样层层引用，最后便形成了一颗</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">树，试举例如下：</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/atfield/275434/o_Python%e6%ba%90%e7%a0%81%e8%a7%a3%e6%9e%906_1.jpg" /><br style="mso-special-character: line-break" /><br style="mso-special-character: line-break" /></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">这颗</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">树代表的是单条语句</span>a+1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">与</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型对应，在</span>Python_ast.h / .c<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中定义了大量用于创建</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点的函数，可以看作是</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点的构造函数。以</span>BinOp<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数为例：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">expr_ty<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">BinOp(expr_ty left, operator_ty op, expr_ty right, int lineno, int col_offset,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyArena *arena)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>expr_ty p;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!left) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_SetString(PyExc_ValueError,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;field left is required for BinOp&quot;);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!op) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_SetString(PyExc_ValueError,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;field op is required for BinOp&quot;);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!right) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_SetString(PyExc_ValueError,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;field right is required for BinOp&quot;);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p = (expr_ty)PyArena_Malloc(arena, sizeof(*p));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!p) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_NoMemory();<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p-&gt;kind = BinOp_kind;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p-&gt;v.BinOp.left = left;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p-&gt;v.BinOp.op = op;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p-&gt;v.BinOp.right = right;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p-&gt;lineno = lineno;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>p-&gt;col_offset = col_offset;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return p;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">此函数只是根据传入的参数做一些简单的错误检查，分配内存，初始化对应的</span>expr_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型，并返回指针。</span></p>
<h1 style="MARGIN: 10pt 0in 0pt"><font face="Calibri" color="#17365d" size="5">adsl_seq &amp; adsl_int_seq</font></h1>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">在上面的</span>stmt_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">定义中，如果稍微注意的话，可以发现其中大量用到了</span>adsl_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型。类似在</span>python_ast.h<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中其他</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型中还会用到</span>adsl_int_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型。</span>adsl_seq &amp; adsl_int_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">简单来说，是一个动态构造出的定长数组。</span>Adsl_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">是</span>void *<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的数组：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">typedef struct {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>int size;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>void *elements[1];<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">} asdl_seq;<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">而</span>adsl_int_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">则是</span>int<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型的数组：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">typedef struct {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>int size;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>int elements[1];<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">} asdl_int_seq;<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt">Size<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">是数组长度，</span>elements<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">则是数组的元素。注意这些类型在定义</span>elements<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">时使用了一点技巧，定义的</span>elements<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">数组长度为</span>1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，而在动态分配内存的时候则是按照实际长度</span>sizeof(adsl_seq) + size - 1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">来分配：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">asdl_seq *<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">asdl_seq_new(int size, PyArena *arena)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq *seq = NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>size_t n = sizeof(asdl_seq) +<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(size ? (sizeof(void *) * (size - 1)) : 0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>seq = (asdl_seq *)PyArena_Malloc(arena, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!seq) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_NoMemory();<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>memset(seq, 0, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>seq-&gt;size = size;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return seq;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">这样既可以动态分配数组元素，也可以很方便的用</span>elements<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">来访问数组元素。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">用如下的宏和函数可以操作</span>adsl_seq / adsl_int_seq :</p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">asdl_seq *asdl_seq_new(int size, PyArena *arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">asdl_int_seq *asdl_int_seq_new(int size, PyArena *arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#define asdl_seq_GET(S, I) (S)-&gt;elements[(I)]<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#define asdl_seq_LEN(S) ((S) == NULL ? 0 : (S)-&gt;size)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#ifdef Py_DEBUG<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#define asdl_seq_SET(S, I, V) { /<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>int _asdl_i = (I); /<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>assert((S) &amp;&amp; _asdl_i &lt; (S)-&gt;size); /<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(S)-&gt;elements[_asdl_i] = (V); /<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#else<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#define asdl_seq_SET(S, I, V) (S)-&gt;elements[I] = (V)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">#endif<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">需要说明的是</span>adsl_seq / adsl_int_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">均是从</span>PyArena<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中分配出，</span>PyArena<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">会在以后的文章中详细分析，目前我们可以暂时把</span>PyArena<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">简单看作一个分配内存用的堆。</span></p>
<h1 style="MARGIN: 10pt 0in 0pt"><font face="Calibri" color="#17365d" size="5">From CST to AST</font></h1>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">如前所述，</span>PyAST_FromNode<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">负责从</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">到</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的转换。简单来说，此函数会深度遍历整棵</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，过滤掉</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中的多余信息，只是将有意义的</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子树转换成</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点构造出</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">树。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt">PyAst_FromNode<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数的大致代码如下：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">mod_ty<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">PyAST_FromNode(const node *n, PyCompilerFlags *flags, const char *filename,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyArena *arena)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>...<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>switch (TYPE(n)) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case file_input:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>stmts = asdl_seq_new(num_stmts(n), arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!stmts)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>for (i = 0; i &lt; NCH(n) - 1; i++) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ch = CHILD(n, i);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;</span>if (TYPE(ch) == NEWLINE)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>continue;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>REQ(ch, stmt);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>num = num_stmts(ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (num == 1) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>s = ast_for_stmt(&amp;c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!s)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>goto error;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq_SET(stmts, k++, s);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>else {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ch = CHILD(ch, 0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>REQ(ch, simple_stmt);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>for (j = 0; j &lt; num; j++) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>s = ast_for_stmt(&amp;c, CHILD(ch, j * 2));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (!s)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>goto error;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>asdl_seq_SET(stmts, k++, s);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return Module(stmts, arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case eval_input: {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>...<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case single_input: {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>...<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>default:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>goto error;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">可以看到</span>PyAst_FromNode<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">根据</span>N<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的类型作了不同处理，以</span>file_input<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">为例，</span>file_input<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的产生式（在</span>Grammar<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">文件中定义）如下：</span>File_input : (NEWLINE | stmt)* ENDMARKER<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，对应的</span>PyAst_FromNode<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的代码作了如下事情：</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l2 level1 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">1．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">调用</span>num_stmts(n)<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">计算出所有顶层语句的个数，并创建出合适大小的</span>adsl_seq<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结构以存放这些语句</span></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l2 level1 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">2．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对于</span>file_input<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点的所有子结点作如下处理：</span> file_input: ( NEW_LINE | stmt )* ENDMARKER</p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 1in; TEXT-INDENT: -0.25in; mso-add-space: auto; mso-list: l2 level2 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">a.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">忽略掉</span>NEW_LINE<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，换行无需处理</span></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 1in; TEXT-INDENT: -0.25in; mso-add-space: auto; mso-list: l2 level2 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">b.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>REQ(ch, stmt)<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">断言</span>ch<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的类型必定为</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，从产生式可以得出此结论</span></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 1in; TEXT-INDENT: -0.25in; mso-add-space: auto; mso-list: l2 level2 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">c.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">计算出子结点</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的语句条数</span>n<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">：</span></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 1.5in; TEXT-INDENT: -1.5in; mso-add-space: auto; mso-list: l2 level3 lfo1; mso-text-indent-alt: -9.0pt"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore"><span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>i.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span></span>N == 1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，说明</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对应单条语句，调用</span>ast_for_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">遍历</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对应得</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子树，生成对应的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子树，并调用</span>adsl_seq_SET<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">设置到数组之中。这样</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的根结点</span>mod_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">便可以知道有哪些顶层的语句（</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">），这些语句结点便是根结点</span>mod_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的子结点。</span></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 1.5in; TEXT-INDENT: -1.5in; mso-add-space: auto; mso-list: l2 level3 lfo1; mso-text-indent-alt: -9.0pt"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore"><span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ii.<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span></span>N &gt; 1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，说明</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对应多条语句。根据</span>Grammar<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">文件中定义的如下产生式可以推知此时</span>ch<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的子结点必然为</span>simple_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">。</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; MARGIN: auto auto auto 93.75pt; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt">stmt: simple_stmt | compound_stmt</p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt">simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE</p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt">small_stmt: (expr_stmt | print_stmt<span style="mso-spacerun: yes">&nbsp; </span>| del_stmt | pass_stmt | flow_stmt |</p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>import_stmt | global_stmt | exec_stmt | assert_stmt)</p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt">compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef</p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">由于</span>simple_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的定义中</span>small_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">和</span>&rsquo;;&rsquo;<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">总是成对出现，因此</span>index<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">为偶数的</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点便是所需的单条顶层语句的结点，对于每个这样的结点调用</span>adsl_seq_SET<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">设置到数组之中</span></p>
<p class="MsoListParagraph" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l2 level1 lfo1"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">3．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">最后，调用</span>Module<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数从</span>stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">数组生成</span>mod_ty<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点，也就是</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的根结点</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">上面的过程中用到了两个关键函数：</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">和</span>ast_for_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">。先来看</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">static int<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">num_stmts(const node *n)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>int i, l;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>node *ch;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>switch (TYPE(n)) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case single_input:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (TYPE(CHILD(n, 0)) == NEWLINE)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return 0;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>else<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return num_stmts(CHILD(n, 0));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case file_input:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>l = 0;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>for (i = 0; i &lt; NCH(n); i++) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>ch = CHILD(n, i);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (TYPE(ch) == stmt)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>l += num_stmts(ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return l;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return num_stmts(CHILD(n, 0));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case compound_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return 1;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case simple_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NCH(n) / 2; /* Divide by 2 to remove count of semi-colons */<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case suite:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>if (NCH(n) == 1)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return num_stmts(CHILD(n, 0));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>else {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>l = 0;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>for (i = 2; i &lt; (NCH(n) - 1); i++)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>l += num_stmts(CHILD(n, i));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return l;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>default: {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>char buf[128];<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>sprintf(buf, &quot;Non-statement found: %d %d/n&quot;,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>TYPE(n), NCH(n));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Py_FatalError(buf);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>assert(0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>return 0;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">此函数比较简单，根据结点类型和产生式递归计算顶层语句的个数。所谓顶层语句，也就是把复合语句</span>(compound_stmt)<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">看作单条语句，复合语句中的内部的语句不做计算，当然普通的简单语句</span>(small_stmt) <span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">也是算</span>1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">条语句。下面根据不同结点类型分析此函数：</span></p>
<p class="MsoListParagraph" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l1 level1 lfo2"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">1．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span>Single_input</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代表单条交互语句，对应的产生式：</span><strong style="mso-bidi-font-weight: normal">single_input: NEWLINE | simple_stmt | compound_stmt NEWLINE<br /></strong><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">如果</span>single_input<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的第一个子结点为</span>NEW_LINE<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，说明无语句，返回</span>0<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，否则说明是</span>simple_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">或者</span>compound_stmt NEWLINE<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，可以直接递归调用</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">处理</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in"><o:p>&nbsp;</o:p></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l1 level1 lfo2"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">2．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span>File_input</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代表整个代码文件，对应的产生式：</span><strong style="mso-bidi-font-weight: normal">file_input: (NEWLINE | stmt)* ENDMARKER<br /></strong><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">只需要反复对每个子结点调用</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">既可。</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in"><o:p>&nbsp;</o:p></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l1 level1 lfo2"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">3．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span>Stmt</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代表语句，对应的产生式：</span><strong style="mso-bidi-font-weight: normal">stmt: simple_stmt | compound_stmt<br /></strong><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对第一个子结点调用</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">既可。</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in"><o:p>&nbsp;</o:p></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l1 level1 lfo2"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">4．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span>Compound_stmt</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代表复合语句，对应的产生式：</span><strong style="mso-bidi-font-weight: normal">compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | funcdef | classdef<br /></strong>compound_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">只可能有单个子结点，而且必然代表单条顶层的语句，因此无需继续遍历，直接返回</span>1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">既可。</span></p>
<p class="MsoListParagraphCxSpFirst" style="MARGIN: 0in 0in 0pt 0.5in"><o:p>&nbsp;</o:p></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l1 level1 lfo2"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">5．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span>Simple_stmt</p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in"><o:p>&nbsp;</o:p></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代表简单语句（非复合语句）的集合，对应的产生式：</span><strong style="mso-bidi-font-weight: normal">simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE<o:p></o:p></strong></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">可以看到顶层语句数</span>=<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子结点数</span>/2 <span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">（去掉多余的分号和</span>NEWLINE<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">）</span></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in"><o:p>&nbsp;</o:p></p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l1 level1 lfo2"><span style="mso-fareast-font-family: Arial; mso-bidi-font-family: Arial"><span style="mso-list: Ignore">6．<span style="FONT: 7pt &quot;Times New Roman&quot;">&nbsp; </span></span></span>Suite</p>
<p class="MsoListParagraphCxSpMiddle" style="MARGIN: 0in 0in 0pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">代表复合语句中的语句块，也就是冒号之后的部分（如：</span>classdef: 'class' NAME ['(' [testlist] ')'] ':' suite<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">），类似于</span>C/C++<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">大括号中的内容，对应的产生式如下：</span><strong style="mso-bidi-font-weight: normal">suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT<o:p></o:p></strong></p>
<p class="MsoListParagraphCxSpLast" style="MARGIN: 0in 0in 10pt 0.5in"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子结点数为</span>1<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，说明必然是</span>simple_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，可以直接调用</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">处理，否则，说明是多个</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的集合，遍历所有子结点调用</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">并累加既可</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">可以看到，</span>num_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">基本上是和语句有关的产生式是一一对应的。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">接下来分析</span>ast_for_stmts<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的内容：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">static stmt_ty<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">ast_for_stmt(struct compiling *c, const node *n)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>if (TYPE(n) == stmt) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>assert(NCH(n) == 1);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>n = CHILD(n, 0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>if (TYPE(n) == simple_stmt) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>assert(num_stmts(n) == 1);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>n = CHILD(n, 0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>if (TYPE(n) == small_stmt) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>REQ(n, small_stmt);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>n = CHILD(n, 0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* small_stmt: expr_stmt | print_stmt<span style="mso-spacerun: yes">&nbsp; </span>| del_stmt | pass_stmt<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>| flow_stmt | import_stmt | global_stmt | exec_stmt<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>| assert_stmt<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>*/<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>switch (TYPE(n)) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case expr_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>return ast_for_expr_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case print_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_print_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case del_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_del_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case pass_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return Pass(LINENO(n), n-&gt;n_col_offset, c-&gt;c_arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case flow_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_flow_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case import_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_import_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case global_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_global_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case exec_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_exec_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case assert_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_assert_stmt(c, n);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>default:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_Format(PyExc_SystemError,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;unhandled small_stmt: TYPE=%d NCH=%d/n&quot;,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>TYPE(n), NCH(n));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>else {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>/* compound_stmt: if_stmt | while_stmt | for_stmt | try_stmt<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;</span>| funcdef | classdef<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>*/<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>node *ch = CHILD(n, 0);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>REQ(n, compound_stmt);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>switch (TYPE(ch)) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case if_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_if_stmt(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case while_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_while_stmt(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>case for_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_for_stmt(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case try_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_try_stmt(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case with_stmt:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_with_stmt(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case funcdef:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_funcdef(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case classdef:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ast_for_classdef(c, ch);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>default:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>PyErr_Format(PyExc_SystemError,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>&quot;unhandled small_stmt: TYPE=%d NCH=%d/n&quot;,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>TYPE(n), NCH(n));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">可以看到，</span>ast_for_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">基本上是根据</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的产生式来遍历</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的，</span>stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的产生式为</span><strong style="mso-bidi-font-weight: normal">stmt: simple_stmt | compound_stmt</strong><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，对应了</span>if<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">语句的两条分支。之后，根据子结点</span>simple_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">或者</span>compound_stmt<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的具体</span>type<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，调用不同的</span>ast_for_xxx<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">函数来遍历</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，生成对应的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">结点。这整个是一个递归下降的遍历分析的过程。其实很多编译器的语法分析是直接用递归下降生成</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">实现的，而</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">则稍有不同，先是用生成的代码生成</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，然后再用手写的递归下降分析法遍历</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">生成</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，本质一样，不过</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的做法可以减少手写的工作量，只需分析</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，无需考虑词法分析的内容，当然增加的工作量是构造一个生成器从</span>Grammar<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">生成对应的分析代码。总的来说，还是有一定好处的，维护的代码会简单一些。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">在递归下降遍历的过程中，一旦遇到的</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">可以生成对应的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，则会调用对应的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">类型的创建函数来返回对应的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">。这个过程在下面的</span>ast_for_factor<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">中可以看到（优化代码为了清晰起见已去掉）：</span></p>
<p>
<table style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BACKGROUND: #eaf1dd; BORDER-LEFT: medium none; BORDER-BOTTOM: medium none; BORDER-COLLAPSE: collapse; mso-padding-alt: 0in 5.4pt 0in 5.4pt; mso-background-themecolor: accent3; mso-yfti-tbllook: 1184; mso-border-insideh: none; mso-border-insidev: none; mso-background-themetint: 51" cellspacing="0" cellpadding="0" border="0" class="MsoTableGrid">
    <tbody>
        <tr style="mso-yfti-irow: 0; mso-yfti-firstrow: yes; mso-yfti-lastrow: yes">
            <td style="PADDING-RIGHT: 5.4pt; PADDING-LEFT: 5.4pt; BORDER-LEFT-COLOR: #ece9d8; BORDER-BOTTOM-COLOR: #ece9d8; PADDING-BOTTOM: 0in; WIDTH: 6.15in; BORDER-TOP-COLOR: #ece9d8; PADDING-TOP: 0in; BACKGROUND-COLOR: transparent; BORDER-RIGHT-COLOR: #ece9d8" valign="top" width="590">
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">static expr_ty<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">ast_for_factor(struct compiling *c, const node *n)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">{<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>node *pfactor, *ppower, *patom, *pnum;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>expr_ty expression;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>expression = ast_for_expr(c, CHILD(n, 1));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>if (!expression)<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><o:p>&nbsp;</o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>switch (TYPE(CHILD(n, 0))) {<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case PLUS:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return UnaryOp(UAdd, expression, LINENO(n), n-&gt;n_col_offset,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>c-&gt;c_arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case MINUS:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return UnaryOp(USub, expression, LINENO(n), n-&gt;n_col_offset,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>c-&gt;c_arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>case TILDE:<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return UnaryOp(Invert, expression, LINENO(n),<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>n-&gt;n_col_offset, c-&gt;c_arena);<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>}<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>PyErr_Format(PyExc_SystemError, &quot;unhandled factor: %d&quot;,<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>TYPE(CHILD(n, 0)));<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt"><span style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </span>return NULL;<o:p></o:p></span></p>
            <p class="MsoNormal" style="MARGIN: 0in 0in 0pt"><span style="FONT-FAMILY: &quot;Courier New&quot;; mso-bidi-font-size: 9.0pt">}<o:p></o:p></span></p>
            </td>
        </tr>
    </tbody>
</table>
</p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><o:p>&nbsp;</o:p></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt">Factor<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对应的产生式如下：</span><strong style="mso-bidi-font-weight: normal">factor: ('+'|'-'|'~') factor | power<o:p></o:p></strong></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">因此，对应的</span>ast_for_factor<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的代码也遵循产生式的定义，先调用</span>ast_for_expr<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">分析</span>factor/power<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">对应的</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子树，再根据第一个子结点是</span>+-~<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">分别调用</span>UnaryOp<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">使用不同参数生成对应的</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">子树。注意分析</span>factor / power<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的时候用的是</span>ast_for_expr<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，一是因为</span>factor<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">可能有左递归，而</span>ast_for_expr<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">会在</span>case factor<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的时候处理左递归，二是因为</span>ast_for_expr<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">已经可以处理</span>factor<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">和</span>power<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">了，无需多写代码。</span></p>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt">OK<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，这次写到这里整个</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">的生成过程就算是结束了。当生成了</span>CST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">之后，</span>Python<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">下一步将会将</span>AST<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">编译成</span>Bytecode<span lang="ZH-CN" style="FONT-FAMILY: 宋体; mso-fareast-font-family: 宋体; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-fareast-theme-font: minor-fareast">，这便是下篇文章的主题了。</span>&nbsp;</p>
<div style="BORDER-RIGHT: medium none; PADDING-RIGHT: 0in; BORDER-TOP: medium none; PADDING-LEFT: 0in; PADDING-BOTTOM: 2pt; BORDER-LEFT: medium none; PADDING-TOP: 0in; BORDER-BOTTOM: #4f81bd 1pt solid; mso-border-bottom-themecolor: accent1; mso-element: para-border-div">
<p class="underline" style="MARGIN: 2pt 0in 0pt"><o:p><font face="Calibri" size="1">&nbsp;</font></o:p></p>
</div>
<p class="MsoNormal" style="MARGIN: 0in 0in 10pt"><strong style="mso-bidi-font-weight: normal"><span lang="ZH-CN" style="FONT-SIZE: 9pt; FONT-FAMILY: 宋体; mso-bidi-font-family: Arial; mso-ascii-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA">作者</span></strong><span style="FONT-SIZE: 9pt; FONT-FAMILY: &quot;Arial&quot;,&quot;sans-serif&quot;; mso-fareast-font-family: 宋体; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA">: <span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp; </span>ATField<br /><strong style="mso-bidi-font-weight: normal">E-Mail:</strong> <span style="mso-tab-count: 1">&nbsp; </span><a href="mailto:atfield_zhang@hotmail.com">atfield_zhang@hotmail.com</a><br /><strong style="mso-bidi-font-weight: normal">Blog</strong>: <span style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="FONT-SIZE: 9pt; FONT-FAMILY: &quot;Arial&quot;,&quot;sans-serif&quot;; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: Arial; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA"><a href="http://blog.csdn.net/atfield"><span style="mso-bidi-font-size: 9.0pt; mso-fareast-font-family: 宋体; mso-bidi-font-family: Arial">http://blog.csdn.net/atfield</span></a></span><span style="FONT-SIZE: 9pt; FONT-FAMILY: &quot;Arial&quot;,&quot;sans-serif&quot;; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: 宋体; mso-bidi-font-family: 'Times New Roman'; mso-bidi-theme-font: minor-bidi; mso-fareast-theme-font: minor-fareast; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA"><br style="mso-special-character: line-break" /><br style="mso-special-character: line-break" /></span></p>    
        <div  style="padding-top:20px">         
            <p  style="font-size:12px;" >版权声明：本文为博主原创文章，未经博主允许不得转载。</p>
        </div>
</div>




<!-- Baidu Button BEGIN -->




<div class="bdsharebuttonbox" style="float: right;">
<a href="#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"  style="background-position:0 -52px !important"></a>
<a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"style="background-position:0 -104px !important"></a>
<a href="#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博"style="background-position:0 -260px !important"></a>
<a href="#" class="bds_renren" data-cmd="renren" title="分享到人人网"style="background-position:0 -208px !important"></a>
<a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"style="background-position:0 -1612px !important" ></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

   <link rel="stylesheet" href="http://static.blog.csdn.net/css/blog_detail.css" />

    
<!--172.16.140.13-->
<ul class="article_next_prev">
            <li class="prev_article"><span  onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian']);location.href='/atfield/article/details/1481538';">上一篇</span><a href="/atfield/article/details/1481538" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_shangyipian'])">.NET / Rotor 源码研究2 – PAL Initialization / Termination </a></li>
            <li class="next_article"><span onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian']);location.href='/atfield/article/details/1491669';">下一篇</span><a href="/atfield/article/details/1491669" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_xiayipian'])">ACM UVa 算法题 #200 - Rare Order的解法</a></li>
</ul>

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" ></script>
<script type="text/javascript" id="bdshell_js"></script>
<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->

 

      
</div>
<div id="suggest"></div>
         <script  language="javascript" type='text/javascript'>     
             $(function(){
                 $.get("/ATField/svc/GetSuggestContent/1488934",function(data){
                     $("#suggest").html(data);
                 });     
             });             
         </script>  


<style>
.blog-ass-articl dd {
color: #369;
width: 99%; /*修改行*/
float: left;
overflow: hidden;
font: normal normal 12px/23px "SimSun";
height: 23px;
margin: 0;
padding: 0 0 0 10px;
margin-right: 30px;
background: url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;
}
</style>

<dl class="blog-ass-articl" id="res-relatived" > 
     <dt><span>猜你在找</span></dt>    


   


    <div id="adCollege" style="width: 42%;float: left;"> 
        <script src="http://csdnimg.cn/jobreco/job_reco.js" type="text/javascript"></script> 
        <script type="text/javascript">
            csdn.position.showEdu({
                sourceType: "blog",
                searchType: "detail",
                searchKey: "1488934",
                username: "",
                recordcount: "5",
                containerId: "adCollege" //容器DIV的id。 
            });
        </script> 
    </div>  

    
     <div id="res"  data-mod="popu_36"  class="tracking-ad" style="width: 42%;float: left;margin-right: 30px;"></div>
   
</dl>

<div id="job_blog_reco">
<script src="http://c.csdnimg.cn/jobreco/job_reco.js" type="text/javascript"></script>
   
     <script type="text/javascript">
         csdn.position.show({
         sourceType: "blog",
         tplType: "blogDetail",
         searchType: "detail",
         searchKey: "1488934",
             username: "",
         containerId: "job_blog_reco"
        }); 
    </script>

</div>

<script type="text/javascript">
    $(function () {
        setTimeout(function () {
            var searchtitletags = 'Python源码分析6 – 从CST到AST的转化' + ',' + $("#tags").html();
            searchService({
                index: 'blog',
                query: searchtitletags,
                from: 5,
                size: 5,
                appendTo: '#res',
                url: 'recommend',
                his: 2,
                client: "blog_cf_enhance",
                tmpl: '<dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;"><a href="#{ url }" title="#{ title }" strategy="#{ strategy }">#{ title }</a></dd>'
            });
        }, 500);
    });    

 </script>   

    <div id="ad_cen">
   
          <script type="text/javascript">
              new Ad(4, 'ad_cen');
          </script>
    </div>
<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list">
    </div>
    <div id="comment_bar">
    </div>
    <div id="comment_form">
    </div>

    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '1488934';
    var commentscount = 7;
    var islock = false
</script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/comment.js"></script>
    <div id="ad_bot">
    </div>
    <script type="text/javascript">
        setTimeout(function(){
            new Ad(5, 'ad_bot');
        },500);  
    </script>
<div id="report_dialog">
</div>

<div id="d-top"  style="bottom:60px;">
        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="http://static.blog.csdn.net/images/blog-icon-reply.png" alt="快速回复">
        </a>    

    <a id="d-top-a" class="btn btn-top backtop"  style="display: none;" title="返回顶部" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_huidaodingbu'])" style="">         
         <img src="http://static.blog.csdn.net/images/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");
        
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);    
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>


<div class="tag_list" style="display:none"></div>
  <script  language="javascript" type='text/javascript'>     
      $(function(){
              setTimeout(function(){
                  $.get("/ATField/svc/GetTagContent",function(data){
                      $(".tag_list").html(data).show();
                  });     
              });
          },500);                       
 </script> 


<div id="pop_win" style="display:none ;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, 220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px repeat scroll rgb(255, 255, 255);">
    
</div>
<div id="popup_mask"></div>
<style>
    #popup_mask
    {
        position: absolute;
        width: 100%;
        height: 100%;
        background: #000;
        z-index: 9999;
        left: 0px;
        top: 0px;
        opacity: 0.3;
        filter: alpha(opacity=30);
        display: none;
    }

</style>




<script type="text/javascript">
    $(function(){
        setTimeout(function(){
            $(".comment_body:contains('回复')").each(function(index,item){
                var u=$(this).text().split('：')[0].toString().replace("回复","")
                var thisComment=$(this);
                if(u)
                {
                    $.getJSON("https://passport.csdn.net/get/nick?callback=?", {users: u}, function(a) {
                        if(a!=null&&a.data!=null&&a.data.length>0)
                        {
                            nick=a.data[0].n; 
                            if(u!=nick)
                            {
                                thisComment.text(thisComment.text().replace(u,nick));  
                            }
                        }       
                    });  
                }
            });
        },200);  
        
        setTimeout(function(){
            $("a img[src='http://js.tongji.linezing.com/stats.gif']").parent().css({"position":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=$("#pop_win");
        $logpop.html('<iframe src="https://passport.csdn.net/account/loginbox?service=http://static.blog.csdn.net/callback.htm" frameborder="0" height="600" width="400" scrolling="no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
 
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( window 
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
 
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
 
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop = $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }    

</script>
                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
                   
           <div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/ATField" target="_blank">
    <img src="http://avatar.csdn.net/8/8/F/1_atfield.jpg" title="访问我的空间" style="max-width:90%"/>
    </a>
    <br />
    <span><a href="http://my.csdn.net/ATField" class="user_name" target="_blank">ATField</a></span>
</div>
<div class="interact">

    <a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>

 <a href="javascript:void(0);" class="letter"  title="[发私信]" onclick="window.open('http://msg.csdn.net/letters/model?receiver=ATField','_blank','height=350,width=700');_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_sixin'])"></a>  
</div>
<div id="blog_medal">
                       <div class="ico_expert"  onclick="javascript:location='http://blog.csdn.net/experts/rule.html'" title="CSDN认证专家" style="cursor:pointer;width:60px;height:60px;background:url('http://c.csdnimg.cn/jifen/images/xunzhang/xunzhang/bokezhuanjiamiddle.png') no-repeat" ></div>
                <div id="bms_box">
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>538410次</span></li>
    <li>积分：<span>6696</span> </li>    
    <li >等级： <span style="position:relative;display:inline-block;z-index:1" >
            <img src="http://c.csdnimg.cn/jifen/images/xunzhang/jianzhang/blog6.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：6696 </div>
        </span>  </li>
    <li>排名：<span>第1532名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>118篇</span></li>
    <li>转载：<span>11篇</span></li>
    <li>译文：<span>1篇</span></li>
    <li>评论：<span>465条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字" /></span>
        <input id="btnSubmit" type="button" value="搜索" title="search in blog" />
        <input type="hidden" name="q" id="inputQ" />
        <input type="hidden" name="t" value="blog" />
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {           
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url = "http://so.csdn.net/so/search/s.do?q=" + encodeURIComponent($("#inputSearch").val()) + "&u=" + username + "&t=blog";
            window.location.href = url;
        }   
    });
</script><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">    
                 <li>
                    <a href="/ATField/article/category/75905" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">.NET</a><span>(25)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/269975" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">.NET / Rotor 源码分析</a><span>(7)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/256452" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">ACM和算法</a><span>(12)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/75906" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">C++</a><span>(4)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/158999" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Compiler</a><span>(1)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/159000" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Linux/UNIX</a><span>(9)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/280520" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Mac OS X</a><span>(7)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/256448" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Python源码分析</a><span>(6)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/479724" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">VS 2010 &amp;amp; .NET 4.0</a><span>(11)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/75907" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">Win32/COM</a><span>(17)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/529323" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">WinDbg</a><span>(2)</span>
                </li>
                 <li>
                    <a href="/ATField/article/category/79097" onclick="_gaq.push(['_trackEvent','function', 'onclick', 'blog_articles_wenzhangfenlei']); ">其他</a><span>(25)</span>
                </li>
</ul>
</div><div id="panel_Archive" class="panel">
<ul class="panel_head"><span>文章存档</span></ul>
<ul class="panel_body">
<div id="archive_list">
<!--归档统计-->
<li><a href="/ATField/article/month/2014/04">2014年04月</a><span>(1)</span></li><li><a href="/ATField/article/month/2009/09">2009年09月</a><span>(1)</span></li><li><a href="/ATField/article/month/2009/08">2009年08月</a><span>(3)</span></li><li><a href="/ATField/article/month/2009/06">2009年06月</a><span>(2)</span></li><li><a href="/ATField/article/month/2009/05">2009年05月</a><span>(2)</span></li><li><a href="/ATField/article/month/2009/04">2009年04月</a><span>(2)</span></li><li><a href="/ATField/article/month/2009/03">2009年03月</a><span>(4)</span></li><li><a href="/ATField/article/month/2009/02">2009年02月</a><span>(1)</span></li><li><a href="/ATField/article/month/2009/01">2009年01月</a><span>(2)</span></li><li><a href="/ATField/article/month/2008/12">2008年12月</a><span>(3)</span></li><li><a href="/ATField/article/month/2008/11">2008年11月</a><span>(7)</span></li><li><a href="/ATField/article/month/2008/10">2008年10月</a><span>(4)</span></li><li><a href="/ATField/article/month/2008/09">2008年09月</a><span>(3)</span></li><li><a href="/ATField/article/month/2008/06">2008年06月</a><span>(2)</span></li><li><a href="/ATField/article/month/2008/03">2008年03月</a><span>(2)</span></li><li><a href="/ATField/article/month/2008/02">2008年02月</a><span>(3)</span></li><li><a href="/ATField/article/month/2007/12">2007年12月</a><span>(1)</span></li><li><a href="/ATField/article/month/2007/11">2007年11月</a><span>(1)</span></li><li><a href="/ATField/article/month/2007/10">2007年10月</a><span>(10)</span></li><li><a href="/ATField/article/month/2007/08">2007年08月</a><span>(9)</span></li><li><a href="/ATField/article/month/2007/07">2007年07月</a><span>(1)</span></li><li><a href="/ATField/article/month/2007/06">2007年06月</a><span>(1)</span></li><li><a href="/ATField/article/month/2007/05">2007年05月</a><span>(7)</span></li><li><a href="/ATField/article/month/2007/04">2007年04月</a><span>(11)</span></li><li><a href="/ATField/article/month/2007/03">2007年03月</a><span>(23)</span></li><li><a href="/ATField/article/month/2007/02">2007年02月</a><span>(7)</span></li><li><a href="/ATField/article/month/2007/01">2007年01月</a><span>(10)</span></li><li><a href="/ATField/article/month/2006/12">2006年12月</a><span>(5)</span></li><li><a href="/ATField/article/month/2006/11">2006年11月</a><span>(3)</span></li>
</div>
</ul>
</div>
<div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="/atfield/article/details/4493003" title="如果一个程序跑10000次只失败一次，你会怎么调试？">如果一个程序跑10000次只失败一次，你会怎么调试？</a><span>(26398)</span>
</li>
<li>
<a href="/atfield/article/details/4465227" title=".NET 4.0中的新功能介绍：契约式设计 (Design By Contracts)">.NET 4.0中的新功能介绍：契约式设计 (Design By Contracts)</a><span>(18696)</span>
</li>
<li>
<a href="/atfield/article/details/1750890" title=".NET中的幕后英雄：MSCOREE.DLL">.NET中的幕后英雄：MSCOREE.DLL</a><span>(18183)</span>
</li>
<li>
<a href="/atfield/article/details/1507122" title="API Hook完全手册">API Hook完全手册</a><span>(14739)</span>
</li>
<li>
<a href="/atfield/article/details/3203602" title="PDC：Anders谈C# 4.0：新功能和展望">PDC：Anders谈C# 4.0：新功能和展望</a><span>(13577)</span>
</li>
<li>
<a href="/atfield/article/details/1526253" title="VC运行库版本不同导致链接.LIB静态库时发生重复定义问题的一个案例分析和总结">VC运行库版本不同导致链接.LIB静态库时发生重复定义问题的一个案例分析和总结</a><span>(12620)</span>
</li>
<li>
<a href="/atfield/article/details/23449089" title=".NET直接编译成本地代码：.NET Native架构简介">.NET直接编译成本地代码：.NET Native架构简介</a><span>(12212)</span>
</li>
<li>
<a href="/atfield/article/details/1589603" title="一道看上去很吓人的算法面试题：如何对n个数进行排序，要求时间复杂度O(n)，空间复杂度O(1)">一道看上去很吓人的算法面试题：如何对n个数进行排序，要求时间复杂度O(n)，空间复杂度O(1)</a><span>(9445)</span>
</li>
<li>
<a href="/atfield/article/details/1532506" title="UNIX信号(signal)编程 - UNIX高级环境编程第10章读书笔记">UNIX信号(signal)编程 - UNIX高级环境编程第10章读书笔记</a><span>(9291)</span>
</li>
<li>
<a href="/atfield/article/details/4037248" title="调试Bug的神兵利器：通过WinDbg条件断点收集Log">调试Bug的神兵利器：通过WinDbg条件断点收集Log</a><span>(8580)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="/atfield/article/details/3203602" title="PDC：Anders谈C# 4.0：新功能和展望">PDC：Anders谈C# 4.0：新功能和展望</a><span>(75)</span>
</li>
<li>
<a href="/atfield/article/details/23449089" title=".NET直接编译成本地代码：.NET Native架构简介">.NET直接编译成本地代码：.NET Native架构简介</a><span>(69)</span>
</li>
<li>
<a href="/atfield/article/details/4493003" title="如果一个程序跑10000次只失败一次，你会怎么调试？">如果一个程序跑10000次只失败一次，你会怎么调试？</a><span>(55)</span>
</li>
<li>
<a href="/atfield/article/details/4202048" title="Visual Studio 2010 + .NET 4.0Beta1发布!">Visual Studio 2010 + .NET 4.0Beta1发布!</a><span>(27)</span>
</li>
<li>
<a href="/atfield/article/details/4465227" title=".NET 4.0中的新功能介绍：契约式设计 (Design By Contracts)">.NET 4.0中的新功能介绍：契约式设计 (Design By Contracts)</a><span>(24)</span>
</li>
<li>
<a href="/atfield/article/details/1750890" title=".NET中的幕后英雄：MSCOREE.DLL">.NET中的幕后英雄：MSCOREE.DLL</a><span>(23)</span>
</li>
<li>
<a href="/atfield/article/details/1382694" title="C++反汇编揭秘1 – 一个简单C++程序反汇编解析 (Rev. 3)">C++反汇编揭秘1 – 一个简单C++程序反汇编解析 (Rev. 3)</a><span>(14)</span>
</li>
<li>
<a href="/atfield/article/details/1589603" title="一道看上去很吓人的算法面试题：如何对n个数进行排序，要求时间复杂度O(n)，空间复杂度O(1)">一道看上去很吓人的算法面试题：如何对n个数进行排序，要求时间复杂度O(n)，空间复杂度O(1)</a><span>(14)</span>
</li>
<li>
<a href="/atfield/article/details/3204289" title="VS 2010 &amp;amp; .NET 4.0 CTP下载地址（10/31放出）">VS 2010 &amp;amp; .NET 4.0 CTP下载地址（10/31放出）</a><span>(13)</span>
</li>
<li>
<a href="/atfield/article/details/1496132" title="如何求最长连续公共子序列和最长连续子字符串">如何求最长连续公共子序列和最长连续子字符串</a><span>(9)</span>
</li>
</ul>
</div>
<div id="homepageArticles" class="panel tracking-ad" data-mod="popu_4">
<ul class="panel_head"><span>推荐文章</span></ul>
<ul class="panel_body" id="ad_commend"></ul>
</div>
<script type="text/javascript">
 new Ad(12, 'ad_commend');
</script><div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="/atfield/article/details/23449089#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/hoopmac" class="user_name">hoopmac</a>:
还期待着VS2015发布的时候能听到一些.net native的消息...哎
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/23449089#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/ProjectDD" class="user_name">ProjectDD</a>:
一年过去了依旧 哑火状态
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/23449089#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/h0730303779" class="user_name">h0730303779</a>:
1年过去了。。。现在能支持winform了没？大神们？
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/4493003#comments">如果一个程序跑10000次只失败一次，你会怎么调试？</a>
    <p style="margin:0px;"><a href="/u013842721" class="user_name">u013842721</a>:
受益，谢谢博主。
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/4493003#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/yinhu201" class="user_name">yinhu201</a>:
我只关心wpf和winform，应用商店程序没什么人愿意用的。
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/1589603#comments">一道看上去很吓人的算法面试题：如何对n个数进行排序，要求时间复杂度O(n)，空间复杂度O(1)</a>
    <p style="margin:0px;"><a href="/sinat_20565969" class="user_name">sinat_20565969</a>:
万一 n 个 数 里面 有重复的数 怎么办呢？输出的时候把 两个 重复 的 数 合并算 成一个 吗？
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/1589603#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/ttgss" class="user_name">ttgss</a>:
楼主也知道谷歌的ART和ARC了吧.你们现在什么程度了?   还是不管winform?
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/1589603#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/ttgss" class="user_name">ttgss</a>:
楼主也知道谷歌的ART和ARC了吧.你们现在什么程度了?   还是不管winform?
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/1589603#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/ttgss" class="user_name">ttgss</a>:
楼主也知道谷歌的ART和ARC了吧.你们现在什么程度了?   还是不管winform?
    </p>
    </li>
    <li>
   
         <a href="/atfield/article/details/1589603#comments">.NET直接编译成本地代码：.NET Native架构简介</a>
    <p style="margin:0px;"><a href="/sqlnew" class="user_name">sqlnew</a>:
虽然我是微软的支持者和开发者，但我不得不说的是，微软真的是被自己玩残了，被自己的策略玩残了。不要以为...
    </p>
    </li>
</ul>
</div>


<div id="custom_column_942172" class="panel">
<ul class="panel_head"><span>.NET</span></ul>
<ul class="panel_body">
<ul><li><a href="http://blog.joycode.com/vbcti" target=_blank>VB CTI Blog</a></li></ul>
</ul>
</div>

<div id="custom_column_942173" class="panel">
<ul class="panel_head"><span>ACM &amp; Algorithms</span></ul>
<ul class="panel_body">
<ul><li><a href="http://acm.uva.es/problemset/" target=_blank>UVa Online Judge</a></li><li><a href="http://acm.timus.ru/" target=_blank>Ural Online Judge</a></li><li><a href="http://www.topcoder.com/" target=_blank>Top Coder</a></li></ul>
</ul>
</div>

<div id="custom_column_942174" class="panel">
<ul class="panel_head"><span>Blog Links</span></ul>
<ul class="panel_body">
<ul><li><a href="http://blog.csdn.net/silverlightshanghai" target=_blank>Silverlight上海开发团队Blog</a> (<a href="http://blog.csdn.net/silverlightshanghai/Rss.aspx" target=_blank>RSS</a>)</li><li><a href="http://blog.joycode.com/vbcti/" target=_blank>VBCTI team blog</a> (<a href="http://blog.joycode.com/vbcti/Rss.aspx" target=_blank>RSS</a>)</li><li><a href="http://weblogs.asp.net/scottgu/" target=_blank>Scott Guthrie</a> (<a href="http://weblogs.asp.net/scottgu/rss.aspx" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/Adam_Nathan/" target=_blank>Adam Nathan</a> (<a href="http://blogs.msdn.com/adam_nathan/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/joshwil/" target=_blank>Josh Williams</a> (<a href="http://blogs.msdn.com/joshwil/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/yunjin/" target=_blank>Yun Jin</a> (<a href="http://blogs.msdn.com/yunjin/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/patrick_dussud/default.aspx" target=_blank>Patrick Dussud</a> (<a href="http://blogs.msdn.com/patrick_dussud/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/davidnotario/" target=_blank>David Notario</a> (<a href="http://blogs.msdn.com/davidnotario/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/suzcook/" target=_blank>Suzanne Cook</a> (<a href="http://blogs.msdn.com/suzcook/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/junfeng/" target=_blank>Junfeng Zhang</a> (<a href="http://blogs.msdn.com/junfeng/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/BCLTeam/" target=_blank>BCL Team Blog</a> (<a href="http://blogs.msdn.com/bclteam/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/jmstall/" target=_blank>Mike Stall</a> (<a href="http://blogs.msdn.com/jmstall/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/cbrumme/default.aspx" target=_blank>Chris Brumme</a> (<a href="http://blogs.msdn.com/cbrumme/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/thottams/default.aspx" target=_blank>Thottam R. Sriram</a> (<a href="http://blogs.msdn.com/thottams/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/varunsekhri/default.aspx" target=_blank>Varun Sekhri</a> (<a href="http://blogs.msdn.com/varunsekhri/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/mbend/" target=_blank>Mason Bendixen</a> (<a href="http://blogs.msdn.com/mbend/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/oldnewthing/" target=_blank>Raymond Chen's Blog</a> (<a href="http://blogs.msdn.com/oldnewthing/rss.xml" target=_blank>RSS</a>)</li><li><a href="http://www.wintellect.com/cs/blogs/JeffreyR/default.aspx" target=_blank>Jeffrey Richter's Blog</a> (<a href="http://www.wintellect.com/cs/blogs/jeffreyr/rss.aspx" target=_blank>RSS</a>)</li><li><a href="http://blogs.msdn.com/matt_pietrek/default.aspx" target=_blank>Matt Pietrek's Blog</a> (<a href="http://blogs.msdn.com/matt_pietrek/rss.xml" target=_blank>RSS</a>)</li></ul>
</ul>
</div>

<div id="custom_column_942175" class="panel">
<ul class="panel_head"><span>Compilers</span></ul>
<ul class="panel_body">
<ul><li><a href="http://www.compilers.net/" target=_blank>www.compilers.net</a></li><li><a href="http://gcc.gnu.org/" target=_blank>GCC</a></li><li><a href="http://www.python.org" target=_blank>Python</a></li><li><a href="https://openjdk.dev.java.net/hotspot/" target=_blank>Java Hotspot VM</a></li></ul>
</ul>
</div>    </div>
    <div class="clear">
    </div>
 </div>   
            <div class="clear">
            </div>
        </div>
        

<script type="text/javascript" src="http://c.csdnimg.cn/rabbit/cnick/cnick.js"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/newblog.min.js"></script>


<script type="text/javascript" src="http://medal.blog.csdn.net/showblogmedal.ashx?blogid=11759"></script>
<script type="text/javascript" src="http://static.blog.csdn.net/scripts/JavaScript1.js"></script>

    <script type="text/javascript" src="http://passport.csdn.net/content/loginbox/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="http://www.csdn.net/ui/scripts/Csdn/counter.js"></script>
<script type="text/javascript" src="http://ad.csdn.net/scripts/ad-blog.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a>"
                    + "<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });
    });
</script>




    </div>
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnId="header_notice_num" wrapId="note1" count="5" subCount="5" type="text/javascript" src="http://static.csdn.net/public/common/toolbar/js/toolbar.js"></script>     <!--new top-->
   
    <link href="http://c.csdnimg.cn/comm_ask/css/ask_float_block.css" type="text/css" rel="stylesheet" />
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/wmd.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/showdown.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/libs/prettify.js'></script>
    <script language='JavaScript' type='text/javascript' src='http://c.csdnimg.cn/comm_ask/js/apps/ask_float_block.js'></script>
   
</body>
</html>   
 